#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyGPLX_LapTrinhWeb.Models
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "cnpm")]
    public partial class MyDataDataContext : System.Data.Linq.DataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Extensibility Method Definitions
        partial void OnCreated();
        partial void InsertTrungTamSatHach(TrungTamSatHach instance);
        partial void UpdateTrungTamSatHach(TrungTamSatHach instance);
        partial void DeleteTrungTamSatHach(TrungTamSatHach instance);
        partial void InsertTonGiao(TonGiao instance);
        partial void UpdateTonGiao(TonGiao instance);
        partial void DeleteTonGiao(TonGiao instance);
        partial void InsertTinhTP(TinhTP instance);
        partial void UpdateTinhTP(TinhTP instance);
        partial void DeleteTinhTP(TinhTP instance);
        partial void InsertQuocTich(QuocTich instance);
        partial void UpdateQuocTich(QuocTich instance);
        partial void DeleteQuocTich(QuocTich instance);
        partial void InsertQuanHuyen(QuanHuyen instance);
        partial void UpdateQuanHuyen(QuanHuyen instance);
        partial void DeleteQuanHuyen(QuanHuyen instance);
        partial void InsertPhuongXa(PhuongXa instance);
        partial void UpdatePhuongXa(PhuongXa instance);
        partial void DeletePhuongXa(PhuongXa instance);
        partial void InsertLyLich(LyLich instance);
        partial void UpdateLyLich(LyLich instance);
        partial void DeleteLyLich(LyLich instance);
        partial void InsertHoSoGPLX(HoSoGPLX instance);
        partial void UpdateHoSoGPLX(HoSoGPLX instance);
        partial void DeleteHoSoGPLX(HoSoGPLX instance);
        partial void InsertDanToc(DanToc instance);
        partial void UpdateDanToc(DanToc instance);
        partial void DeleteDanToc(DanToc instance);
        partial void InsertHangGPLX(HangGPLX instance);
        partial void UpdateHangGPLX(HangGPLX instance);
        partial void DeleteHangGPLX(HangGPLX instance);
        #endregion
        public MyDataDataContext() :
                base(global::System.Configuration.ConfigurationManager.ConnectionStrings["cnpmConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }

        public MyDataDataContext(string connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public MyDataDataContext(System.Data.IDbConnection connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public MyDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public MyDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<TrungTamSatHach> TrungTamSatHaches
        {
            get
            {
                return this.GetTable<TrungTamSatHach>();
            }
        }

        public System.Data.Linq.Table<TonGiao> TonGiaos
        {
            get
            {
                return this.GetTable<TonGiao>();
            }
        }

        public System.Data.Linq.Table<TinhTP> TinhTPs
        {
            get
            {
                return this.GetTable<TinhTP>();
            }
        }

        public System.Data.Linq.Table<QuocTich> QuocTiches
        {
            get
            {
                return this.GetTable<QuocTich>();
            }
        }

        public System.Data.Linq.Table<QuanHuyen> QuanHuyens
        {
            get
            {
                return this.GetTable<QuanHuyen>();
            }
        }

        public System.Data.Linq.Table<PhuongXa> PhuongXas
        {
            get
            {
                return this.GetTable<PhuongXa>();
            }
        }

        public System.Data.Linq.Table<LyLich> LyLiches
        {
            get
            {
                return this.GetTable<LyLich>();
            }
        }

        public System.Data.Linq.Table<HoSoGPLX> HoSoGPLXes
        {
            get
            {
                return this.GetTable<HoSoGPLX>();
            }
        }

        public System.Data.Linq.Table<DanToc> DanTocs
        {
            get
            {
                return this.GetTable<DanToc>();
            }
        }

        public System.Data.Linq.Table<HangGPLX> HangGPLXes
        {
            get
            {
                return this.GetTable<HangGPLX>();
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TrungTamSatHach")]
    public partial class TrungTamSatHach : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _MaTT;

        private string _TenTT;

        private EntitySet<HoSoGPLX> _HoSoGPLXes;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMaTTChanging(string value);
        partial void OnMaTTChanged();
        partial void OnTenTTChanging(string value);
        partial void OnTenTTChanged();
        #endregion

        public TrungTamSatHach()
        {
            this._HoSoGPLXes = new EntitySet<HoSoGPLX>(new Action<HoSoGPLX>(this.attach_HoSoGPLXes), new Action<HoSoGPLX>(this.detach_HoSoGPLXes));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaTT", DbType = "Char(10) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string MaTT
        {
            get
            {
                return this._MaTT;
            }
            set
            {
                if ((this._MaTT != value))
                {
                    this.OnMaTTChanging(value);
                    this.SendPropertyChanging();
                    this._MaTT = value;
                    this.SendPropertyChanged("MaTT");
                    this.OnMaTTChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TenTT", DbType = "NVarChar(100)")]
        public string TenTT
        {
            get
            {
                return this._TenTT;
            }
            set
            {
                if ((this._TenTT != value))
                {
                    this.OnTenTTChanging(value);
                    this.SendPropertyChanging();
                    this._TenTT = value;
                    this.SendPropertyChanged("TenTT");
                    this.OnTenTTChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "TrungTamSatHach_HoSoGPLX", Storage = "_HoSoGPLXes", ThisKey = "MaTT", OtherKey = "MaTT")]
        public EntitySet<HoSoGPLX> HoSoGPLXes
        {
            get
            {
                return this._HoSoGPLXes;
            }
            set
            {
                this._HoSoGPLXes.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_HoSoGPLXes(HoSoGPLX entity)
        {
            this.SendPropertyChanging();
            entity.TrungTamSatHach = this;
        }

        private void detach_HoSoGPLXes(HoSoGPLX entity)
        {
            this.SendPropertyChanging();
            entity.TrungTamSatHach = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TonGiao")]
    public partial class TonGiao : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MaTG;

        private string _TenTG;

        private EntitySet<LyLich> _LyLiches;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMaTGChanging(int value);
        partial void OnMaTGChanged();
        partial void OnTenTGChanging(string value);
        partial void OnTenTGChanged();
        #endregion

        public TonGiao()
        {
            this._LyLiches = new EntitySet<LyLich>(new Action<LyLich>(this.attach_LyLiches), new Action<LyLich>(this.detach_LyLiches));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaTG", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int MaTG
        {
            get
            {
                return this._MaTG;
            }
            set
            {
                if ((this._MaTG != value))
                {
                    this.OnMaTGChanging(value);
                    this.SendPropertyChanging();
                    this._MaTG = value;
                    this.SendPropertyChanged("MaTG");
                    this.OnMaTGChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TenTG", DbType = "NVarChar(50)")]
        public string TenTG
        {
            get
            {
                return this._TenTG;
            }
            set
            {
                if ((this._TenTG != value))
                {
                    this.OnTenTGChanging(value);
                    this.SendPropertyChanging();
                    this._TenTG = value;
                    this.SendPropertyChanged("TenTG");
                    this.OnTenTGChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "TonGiao_LyLich", Storage = "_LyLiches", ThisKey = "MaTG", OtherKey = "MaTG")]
        public EntitySet<LyLich> LyLiches
        {
            get
            {
                return this._LyLiches;
            }
            set
            {
                this._LyLiches.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_LyLiches(LyLich entity)
        {
            this.SendPropertyChanging();
            entity.TonGiao = this;
        }

        private void detach_LyLiches(LyLich entity)
        {
            this.SendPropertyChanging();
            entity.TonGiao = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TinhTP")]
    public partial class TinhTP : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _MaTinh;

        private string _TenTinh;

        private EntitySet<QuanHuyen> _QuanHuyens;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMaTinhChanging(string value);
        partial void OnMaTinhChanged();
        partial void OnTenTinhChanging(string value);
        partial void OnTenTinhChanged();
        #endregion

        public TinhTP()
        {
            this._QuanHuyens = new EntitySet<QuanHuyen>(new Action<QuanHuyen>(this.attach_QuanHuyens), new Action<QuanHuyen>(this.detach_QuanHuyens));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaTinh", DbType = "Char(2) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string MaTinh
        {
            get
            {
                return this._MaTinh;
            }
            set
            {
                if ((this._MaTinh != value))
                {
                    this.OnMaTinhChanging(value);
                    this.SendPropertyChanging();
                    this._MaTinh = value;
                    this.SendPropertyChanged("MaTinh");
                    this.OnMaTinhChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TenTinh", DbType = "NVarChar(30)")]
        public string TenTinh
        {
            get
            {
                return this._TenTinh;
            }
            set
            {
                if ((this._TenTinh != value))
                {
                    this.OnTenTinhChanging(value);
                    this.SendPropertyChanging();
                    this._TenTinh = value;
                    this.SendPropertyChanged("TenTinh");
                    this.OnTenTinhChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "TinhTP_QuanHuyen", Storage = "_QuanHuyens", ThisKey = "MaTinh", OtherKey = "MaTinh")]
        public EntitySet<QuanHuyen> QuanHuyens
        {
            get
            {
                return this._QuanHuyens;
            }
            set
            {
                this._QuanHuyens.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_QuanHuyens(QuanHuyen entity)
        {
            this.SendPropertyChanging();
            entity.TinhTP = this;
        }

        private void detach_QuanHuyens(QuanHuyen entity)
        {
            this.SendPropertyChanging();
            entity.TinhTP = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.QuocTich")]
    public partial class QuocTich : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _MaQT;

        private string _TenQT;

        private EntitySet<LyLich> _LyLiches;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMaQTChanging(string value);
        partial void OnMaQTChanged();
        partial void OnTenQTChanging(string value);
        partial void OnTenQTChanged();
        #endregion

        public QuocTich()
        {
            this._LyLiches = new EntitySet<LyLich>(new Action<LyLich>(this.attach_LyLiches), new Action<LyLich>(this.detach_LyLiches));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaQT", DbType = "Char(2) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string MaQT
        {
            get
            {
                return this._MaQT;
            }
            set
            {
                if ((this._MaQT != value))
                {
                    this.OnMaQTChanging(value);
                    this.SendPropertyChanging();
                    this._MaQT = value;
                    this.SendPropertyChanged("MaQT");
                    this.OnMaQTChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TenQT", DbType = "NVarChar(150)")]
        public string TenQT
        {
            get
            {
                return this._TenQT;
            }
            set
            {
                if ((this._TenQT != value))
                {
                    this.OnTenQTChanging(value);
                    this.SendPropertyChanging();
                    this._TenQT = value;
                    this.SendPropertyChanged("TenQT");
                    this.OnTenQTChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "QuocTich_LyLich", Storage = "_LyLiches", ThisKey = "MaQT", OtherKey = "MaQT")]
        public EntitySet<LyLich> LyLiches
        {
            get
            {
                return this._LyLiches;
            }
            set
            {
                this._LyLiches.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_LyLiches(LyLich entity)
        {
            this.SendPropertyChanging();
            entity.QuocTich = this;
        }

        private void detach_LyLiches(LyLich entity)
        {
            this.SendPropertyChanging();
            entity.QuocTich = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.QuanHuyen")]
    public partial class QuanHuyen : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _MaHuyen;

        private string _TenHuyen;

        private string _MaTinh;

        private EntitySet<PhuongXa> _PhuongXas;

        private EntityRef<TinhTP> _TinhTP;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMaHuyenChanging(string value);
        partial void OnMaHuyenChanged();
        partial void OnTenHuyenChanging(string value);
        partial void OnTenHuyenChanged();
        partial void OnMaTinhChanging(string value);
        partial void OnMaTinhChanged();
        #endregion

        public QuanHuyen()
        {
            this._PhuongXas = new EntitySet<PhuongXa>(new Action<PhuongXa>(this.attach_PhuongXas), new Action<PhuongXa>(this.detach_PhuongXas));
            this._TinhTP = default(EntityRef<TinhTP>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaHuyen", DbType = "Char(3) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string MaHuyen
        {
            get
            {
                return this._MaHuyen;
            }
            set
            {
                if ((this._MaHuyen != value))
                {
                    this.OnMaHuyenChanging(value);
                    this.SendPropertyChanging();
                    this._MaHuyen = value;
                    this.SendPropertyChanged("MaHuyen");
                    this.OnMaHuyenChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TenHuyen", DbType = "NVarChar(60)")]
        public string TenHuyen
        {
            get
            {
                return this._TenHuyen;
            }
            set
            {
                if ((this._TenHuyen != value))
                {
                    this.OnTenHuyenChanging(value);
                    this.SendPropertyChanging();
                    this._TenHuyen = value;
                    this.SendPropertyChanged("TenHuyen");
                    this.OnTenHuyenChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaTinh", DbType = "Char(2)")]
        public string MaTinh
        {
            get
            {
                return this._MaTinh;
            }
            set
            {
                if ((this._MaTinh != value))
                {
                    if (this._TinhTP.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnMaTinhChanging(value);
                    this.SendPropertyChanging();
                    this._MaTinh = value;
                    this.SendPropertyChanged("MaTinh");
                    this.OnMaTinhChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "QuanHuyen_PhuongXa", Storage = "_PhuongXas", ThisKey = "MaHuyen", OtherKey = "MaHuyen")]
        public EntitySet<PhuongXa> PhuongXas
        {
            get
            {
                return this._PhuongXas;
            }
            set
            {
                this._PhuongXas.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "TinhTP_QuanHuyen", Storage = "_TinhTP", ThisKey = "MaTinh", OtherKey = "MaTinh", IsForeignKey = true)]
        public TinhTP TinhTP
        {
            get
            {
                return this._TinhTP.Entity;
            }
            set
            {
                TinhTP previousValue = this._TinhTP.Entity;
                if (((previousValue != value)
                            || (this._TinhTP.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._TinhTP.Entity = null;
                        previousValue.QuanHuyens.Remove(this);
                    }
                    this._TinhTP.Entity = value;
                    if ((value != null))
                    {
                        value.QuanHuyens.Add(this);
                        this._MaTinh = value.MaTinh;
                    }
                    else
                    {
                        this._MaTinh = default(string);
                    }
                    this.SendPropertyChanged("TinhTP");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_PhuongXas(PhuongXa entity)
        {
            this.SendPropertyChanging();
            entity.QuanHuyen = this;
        }

        private void detach_PhuongXas(PhuongXa entity)
        {
            this.SendPropertyChanging();
            entity.QuanHuyen = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PhuongXa")]
    public partial class PhuongXa : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _MaPX;

        private string _TenPX;

        private string _MaHuyen;

        private EntitySet<LyLich> _LyLiches;

        private EntityRef<QuanHuyen> _QuanHuyen;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMaPXChanging(string value);
        partial void OnMaPXChanged();
        partial void OnTenPXChanging(string value);
        partial void OnTenPXChanged();
        partial void OnMaHuyenChanging(string value);
        partial void OnMaHuyenChanged();
        #endregion

        public PhuongXa()
        {
            this._LyLiches = new EntitySet<LyLich>(new Action<LyLich>(this.attach_LyLiches), new Action<LyLich>(this.detach_LyLiches));
            this._QuanHuyen = default(EntityRef<QuanHuyen>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaPX", DbType = "Char(5) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string MaPX
        {
            get
            {
                return this._MaPX;
            }
            set
            {
                if ((this._MaPX != value))
                {
                    this.OnMaPXChanging(value);
                    this.SendPropertyChanging();
                    this._MaPX = value;
                    this.SendPropertyChanged("MaPX");
                    this.OnMaPXChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TenPX", DbType = "NVarChar(50)")]
        public string TenPX
        {
            get
            {
                return this._TenPX;
            }
            set
            {
                if ((this._TenPX != value))
                {
                    this.OnTenPXChanging(value);
                    this.SendPropertyChanging();
                    this._TenPX = value;
                    this.SendPropertyChanged("TenPX");
                    this.OnTenPXChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaHuyen", DbType = "Char(3)")]
        public string MaHuyen
        {
            get
            {
                return this._MaHuyen;
            }
            set
            {
                if ((this._MaHuyen != value))
                {
                    if (this._QuanHuyen.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnMaHuyenChanging(value);
                    this.SendPropertyChanging();
                    this._MaHuyen = value;
                    this.SendPropertyChanged("MaHuyen");
                    this.OnMaHuyenChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PhuongXa_LyLich", Storage = "_LyLiches", ThisKey = "MaPX", OtherKey = "DiaChi")]
        public EntitySet<LyLich> LyLiches
        {
            get
            {
                return this._LyLiches;
            }
            set
            {
                this._LyLiches.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "QuanHuyen_PhuongXa", Storage = "_QuanHuyen", ThisKey = "MaHuyen", OtherKey = "MaHuyen", IsForeignKey = true)]
        public QuanHuyen QuanHuyen
        {
            get
            {
                return this._QuanHuyen.Entity;
            }
            set
            {
                QuanHuyen previousValue = this._QuanHuyen.Entity;
                if (((previousValue != value)
                            || (this._QuanHuyen.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._QuanHuyen.Entity = null;
                        previousValue.PhuongXas.Remove(this);
                    }
                    this._QuanHuyen.Entity = value;
                    if ((value != null))
                    {
                        value.PhuongXas.Add(this);
                        this._MaHuyen = value.MaHuyen;
                    }
                    else
                    {
                        this._MaHuyen = default(string);
                    }
                    this.SendPropertyChanged("QuanHuyen");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_LyLiches(LyLich entity)
        {
            this.SendPropertyChanging();
            entity.PhuongXa = this;
        }

        private void detach_LyLiches(LyLich entity)
        {
            this.SendPropertyChanging();
            entity.PhuongXa = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.LyLich")]
    public partial class LyLich : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _SoCCCD;

        private string _HoLot;

        private string _Ten;

        private System.Nullable<System.DateTime> _NgaySinh;

        private string _GioiTinh;

        private string _SDT;

        private System.Nullable<int> _MaDT;

        private string _MaQT;

        private System.Nullable<int> _MaTG;

        private string _DiaChi;

        private string _HinhAnh;

        private EntitySet<HoSoGPLX> _HoSoGPLXes;

        private EntityRef<PhuongXa> _PhuongXa;

        private EntityRef<QuocTich> _QuocTich;

        private EntityRef<TonGiao> _TonGiao;

        private EntityRef<DanToc> _DanToc;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnSoCCCDChanging(string value);
        partial void OnSoCCCDChanged();
        partial void OnHoLotChanging(string value);
        partial void OnHoLotChanged();
        partial void OnTenChanging(string value);
        partial void OnTenChanged();
        partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
        partial void OnNgaySinhChanged();
        partial void OnGioiTinhChanging(string value);
        partial void OnGioiTinhChanged();
        partial void OnSDTChanging(string value);
        partial void OnSDTChanged();
        partial void OnMaDTChanging(System.Nullable<int> value);
        partial void OnMaDTChanged();
        partial void OnMaQTChanging(string value);
        partial void OnMaQTChanged();
        partial void OnMaTGChanging(System.Nullable<int> value);
        partial void OnMaTGChanged();
        partial void OnDiaChiChanging(string value);
        partial void OnDiaChiChanged();
        partial void OnHinhAnhChanging(string value);
        partial void OnHinhAnhChanged();
        #endregion

        public LyLich()
        {
            this._HoSoGPLXes = new EntitySet<HoSoGPLX>(new Action<HoSoGPLX>(this.attach_HoSoGPLXes), new Action<HoSoGPLX>(this.detach_HoSoGPLXes));
            this._PhuongXa = default(EntityRef<PhuongXa>);
            this._QuocTich = default(EntityRef<QuocTich>);
            this._TonGiao = default(EntityRef<TonGiao>);
            this._DanToc = default(EntityRef<DanToc>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SoCCCD", DbType = "Char(12) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string SoCCCD
        {
            get
            {
                return this._SoCCCD;
            }
            set
            {
                if ((this._SoCCCD != value))
                {
                    this.OnSoCCCDChanging(value);
                    this.SendPropertyChanging();
                    this._SoCCCD = value;
                    this.SendPropertyChanged("SoCCCD");
                    this.OnSoCCCDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HoLot", DbType = "NVarChar(50)")]
        public string HoLot
        {
            get
            {
                return this._HoLot;
            }
            set
            {
                if ((this._HoLot != value))
                {
                    this.OnHoLotChanging(value);
                    this.SendPropertyChanging();
                    this._HoLot = value;
                    this.SendPropertyChanged("HoLot");
                    this.OnHoLotChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ten", DbType = "NVarChar(30)")]
        public string Ten
        {
            get
            {
                return this._Ten;
            }
            set
            {
                if ((this._Ten != value))
                {
                    this.OnTenChanging(value);
                    this.SendPropertyChanging();
                    this._Ten = value;
                    this.SendPropertyChanged("Ten");
                    this.OnTenChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NgaySinh", DbType = "Date")]
        public System.Nullable<System.DateTime> NgaySinh
        {
            get
            {
                return this._NgaySinh;
            }
            set
            {
                if ((this._NgaySinh != value))
                {
                    this.OnNgaySinhChanging(value);
                    this.SendPropertyChanging();
                    this._NgaySinh = value;
                    this.SendPropertyChanged("NgaySinh");
                    this.OnNgaySinhChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GioiTinh", DbType = "NVarChar(5)")]
        public string GioiTinh
        {
            get
            {
                return this._GioiTinh;
            }
            set
            {
                if ((this._GioiTinh != value))
                {
                    this.OnGioiTinhChanging(value);
                    this.SendPropertyChanging();
                    this._GioiTinh = value;
                    this.SendPropertyChanged("GioiTinh");
                    this.OnGioiTinhChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SDT", DbType = "Char(10)")]
        public string SDT
        {
            get
            {
                return this._SDT;
            }
            set
            {
                if ((this._SDT != value))
                {
                    this.OnSDTChanging(value);
                    this.SendPropertyChanging();
                    this._SDT = value;
                    this.SendPropertyChanged("SDT");
                    this.OnSDTChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaDT", DbType = "Int")]
        public System.Nullable<int> MaDT
        {
            get
            {
                return this._MaDT;
            }
            set
            {
                if ((this._MaDT != value))
                {
                    if (this._DanToc.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnMaDTChanging(value);
                    this.SendPropertyChanging();
                    this._MaDT = value;
                    this.SendPropertyChanged("MaDT");
                    this.OnMaDTChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaQT", DbType = "Char(2)")]
        public string MaQT
        {
            get
            {
                return this._MaQT;
            }
            set
            {
                if ((this._MaQT != value))
                {
                    if (this._QuocTich.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnMaQTChanging(value);
                    this.SendPropertyChanging();
                    this._MaQT = value;
                    this.SendPropertyChanged("MaQT");
                    this.OnMaQTChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaTG", DbType = "Int")]
        public System.Nullable<int> MaTG
        {
            get
            {
                return this._MaTG;
            }
            set
            {
                if ((this._MaTG != value))
                {
                    if (this._TonGiao.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnMaTGChanging(value);
                    this.SendPropertyChanging();
                    this._MaTG = value;
                    this.SendPropertyChanged("MaTG");
                    this.OnMaTGChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DiaChi", DbType = "Char(5)")]
        public string DiaChi
        {
            get
            {
                return this._DiaChi;
            }
            set
            {
                if ((this._DiaChi != value))
                {
                    if (this._PhuongXa.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnDiaChiChanging(value);
                    this.SendPropertyChanging();
                    this._DiaChi = value;
                    this.SendPropertyChanged("DiaChi");
                    this.OnDiaChiChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HinhAnh", DbType = "VarChar(300)")]
        public string HinhAnh
        {
            get
            {
                return this._HinhAnh;
            }
            set
            {
                if ((this._HinhAnh != value))
                {
                    this.OnHinhAnhChanging(value);
                    this.SendPropertyChanging();
                    this._HinhAnh = value;
                    this.SendPropertyChanged("HinhAnh");
                    this.OnHinhAnhChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "LyLich_HoSoGPLX", Storage = "_HoSoGPLXes", ThisKey = "SoCCCD", OtherKey = "SoCCCD")]
        public EntitySet<HoSoGPLX> HoSoGPLXes
        {
            get
            {
                return this._HoSoGPLXes;
            }
            set
            {
                this._HoSoGPLXes.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "PhuongXa_LyLich", Storage = "_PhuongXa", ThisKey = "DiaChi", OtherKey = "MaPX", IsForeignKey = true)]
        public PhuongXa PhuongXa
        {
            get
            {
                return this._PhuongXa.Entity;
            }
            set
            {
                PhuongXa previousValue = this._PhuongXa.Entity;
                if (((previousValue != value)
                            || (this._PhuongXa.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._PhuongXa.Entity = null;
                        previousValue.LyLiches.Remove(this);
                    }
                    this._PhuongXa.Entity = value;
                    if ((value != null))
                    {
                        value.LyLiches.Add(this);
                        this._DiaChi = value.MaPX;
                    }
                    else
                    {
                        this._DiaChi = default(string);
                    }
                    this.SendPropertyChanged("PhuongXa");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "QuocTich_LyLich", Storage = "_QuocTich", ThisKey = "MaQT", OtherKey = "MaQT", IsForeignKey = true)]
        public QuocTich QuocTich
        {
            get
            {
                return this._QuocTich.Entity;
            }
            set
            {
                QuocTich previousValue = this._QuocTich.Entity;
                if (((previousValue != value)
                            || (this._QuocTich.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._QuocTich.Entity = null;
                        previousValue.LyLiches.Remove(this);
                    }
                    this._QuocTich.Entity = value;
                    if ((value != null))
                    {
                        value.LyLiches.Add(this);
                        this._MaQT = value.MaQT;
                    }
                    else
                    {
                        this._MaQT = default(string);
                    }
                    this.SendPropertyChanged("QuocTich");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "TonGiao_LyLich", Storage = "_TonGiao", ThisKey = "MaTG", OtherKey = "MaTG", IsForeignKey = true)]
        public TonGiao TonGiao
        {
            get
            {
                return this._TonGiao.Entity;
            }
            set
            {
                TonGiao previousValue = this._TonGiao.Entity;
                if (((previousValue != value)
                            || (this._TonGiao.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._TonGiao.Entity = null;
                        previousValue.LyLiches.Remove(this);
                    }
                    this._TonGiao.Entity = value;
                    if ((value != null))
                    {
                        value.LyLiches.Add(this);
                        this._MaTG = value.MaTG;
                    }
                    else
                    {
                        this._MaTG = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("TonGiao");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "DanToc_LyLich", Storage = "_DanToc", ThisKey = "MaDT", OtherKey = "MaDT", IsForeignKey = true)]
        public DanToc DanToc
        {
            get
            {
                return this._DanToc.Entity;
            }
            set
            {
                DanToc previousValue = this._DanToc.Entity;
                if (((previousValue != value)
                            || (this._DanToc.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._DanToc.Entity = null;
                        previousValue.LyLiches.Remove(this);
                    }
                    this._DanToc.Entity = value;
                    if ((value != null))
                    {
                        value.LyLiches.Add(this);
                        this._MaDT = value.MaDT;
                    }
                    else
                    {
                        this._MaDT = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("DanToc");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_HoSoGPLXes(HoSoGPLX entity)
        {
            this.SendPropertyChanging();
            entity.LyLich = this;
        }

        private void detach_HoSoGPLXes(HoSoGPLX entity)
        {
            this.SendPropertyChanging();
            entity.LyLich = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.HoSoGPLX")]
    public partial class HoSoGPLX : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _MaGPLX;

        private string _SoCCCD;

        private string _MaHang;

        private System.Nullable<System.DateTime> _NgayCapGPLX;

        private System.Nullable<System.DateTime> _NgayHetHanGPLX;

        private string _MaTT;

        private System.Nullable<int> _DiemLT;

        private System.Nullable<int> _DiemTH;

        private EntityRef<TrungTamSatHach> _TrungTamSatHach;

        private EntityRef<LyLich> _LyLich;

        private EntityRef<HangGPLX> _HangGPLX;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMaGPLXChanging(string value);
        partial void OnMaGPLXChanged();
        partial void OnSoCCCDChanging(string value);
        partial void OnSoCCCDChanged();
        partial void OnMaHangChanging(string value);
        partial void OnMaHangChanged();
        partial void OnNgayCapGPLXChanging(System.Nullable<System.DateTime> value);
        partial void OnNgayCapGPLXChanged();
        partial void OnNgayHetHanGPLXChanging(System.Nullable<System.DateTime> value);
        partial void OnNgayHetHanGPLXChanged();
        partial void OnMaTTChanging(string value);
        partial void OnMaTTChanged();
        partial void OnDiemLTChanging(System.Nullable<int> value);
        partial void OnDiemLTChanged();
        partial void OnDiemTHChanging(System.Nullable<int> value);
        partial void OnDiemTHChanged();
        #endregion

        public HoSoGPLX()
        {
            this._TrungTamSatHach = default(EntityRef<TrungTamSatHach>);
            this._LyLich = default(EntityRef<LyLich>);
            this._HangGPLX = default(EntityRef<HangGPLX>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaGPLX", DbType = "Char(12) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string MaGPLX
        {
            get
            {
                return this._MaGPLX;
            }
            set
            {
                if ((this._MaGPLX != value))
                {
                    this.OnMaGPLXChanging(value);
                    this.SendPropertyChanging();
                    this._MaGPLX = value;
                    this.SendPropertyChanged("MaGPLX");
                    this.OnMaGPLXChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SoCCCD", DbType = "Char(12)")]
        public string SoCCCD
        {
            get
            {
                return this._SoCCCD;
            }
            set
            {
                if ((this._SoCCCD != value))
                {
                    if (this._LyLich.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnSoCCCDChanging(value);
                    this.SendPropertyChanging();
                    this._SoCCCD = value;
                    this.SendPropertyChanged("SoCCCD");
                    this.OnSoCCCDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaHang", DbType = "Char(3)")]
        public string MaHang
        {
            get
            {
                return this._MaHang;
            }
            set
            {
                if ((this._MaHang != value))
                {
                    if (this._HangGPLX.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnMaHangChanging(value);
                    this.SendPropertyChanging();
                    this._MaHang = value;
                    this.SendPropertyChanged("MaHang");
                    this.OnMaHangChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NgayCapGPLX", DbType = "Date")]
        public System.Nullable<System.DateTime> NgayCapGPLX
        {
            get
            {
                return this._NgayCapGPLX;
            }
            set
            {
                if ((this._NgayCapGPLX != value))
                {
                    this.OnNgayCapGPLXChanging(value);
                    this.SendPropertyChanging();
                    this._NgayCapGPLX = value;
                    this.SendPropertyChanged("NgayCapGPLX");
                    this.OnNgayCapGPLXChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NgayHetHanGPLX", DbType = "Date")]
        public System.Nullable<System.DateTime> NgayHetHanGPLX
        {
            get
            {
                return this._NgayHetHanGPLX;
            }
            set
            {
                if ((this._NgayHetHanGPLX != value))
                {
                    this.OnNgayHetHanGPLXChanging(value);
                    this.SendPropertyChanging();
                    this._NgayHetHanGPLX = value;
                    this.SendPropertyChanged("NgayHetHanGPLX");
                    this.OnNgayHetHanGPLXChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaTT", DbType = "Char(10)")]
        public string MaTT
        {
            get
            {
                return this._MaTT;
            }
            set
            {
                if ((this._MaTT != value))
                {
                    if (this._TrungTamSatHach.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnMaTTChanging(value);
                    this.SendPropertyChanging();
                    this._MaTT = value;
                    this.SendPropertyChanged("MaTT");
                    this.OnMaTTChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DiemLT", DbType = "Int")]
        public System.Nullable<int> DiemLT
        {
            get
            {
                return this._DiemLT;
            }
            set
            {
                if ((this._DiemLT != value))
                {
                    this.OnDiemLTChanging(value);
                    this.SendPropertyChanging();
                    this._DiemLT = value;
                    this.SendPropertyChanged("DiemLT");
                    this.OnDiemLTChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DiemTH", DbType = "Int")]
        public System.Nullable<int> DiemTH
        {
            get
            {
                return this._DiemTH;
            }
            set
            {
                if ((this._DiemTH != value))
                {
                    this.OnDiemTHChanging(value);
                    this.SendPropertyChanging();
                    this._DiemTH = value;
                    this.SendPropertyChanged("DiemTH");
                    this.OnDiemTHChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "TrungTamSatHach_HoSoGPLX", Storage = "_TrungTamSatHach", ThisKey = "MaTT", OtherKey = "MaTT", IsForeignKey = true)]
        public TrungTamSatHach TrungTamSatHach
        {
            get
            {
                return this._TrungTamSatHach.Entity;
            }
            set
            {
                TrungTamSatHach previousValue = this._TrungTamSatHach.Entity;
                if (((previousValue != value)
                            || (this._TrungTamSatHach.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._TrungTamSatHach.Entity = null;
                        previousValue.HoSoGPLXes.Remove(this);
                    }
                    this._TrungTamSatHach.Entity = value;
                    if ((value != null))
                    {
                        value.HoSoGPLXes.Add(this);
                        this._MaTT = value.MaTT;
                    }
                    else
                    {
                        this._MaTT = default(string);
                    }
                    this.SendPropertyChanged("TrungTamSatHach");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "LyLich_HoSoGPLX", Storage = "_LyLich", ThisKey = "SoCCCD", OtherKey = "SoCCCD", IsForeignKey = true)]
        public LyLich LyLich
        {
            get
            {
                return this._LyLich.Entity;
            }
            set
            {
                LyLich previousValue = this._LyLich.Entity;
                if (((previousValue != value)
                            || (this._LyLich.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._LyLich.Entity = null;
                        previousValue.HoSoGPLXes.Remove(this);
                    }
                    this._LyLich.Entity = value;
                    if ((value != null))
                    {
                        value.HoSoGPLXes.Add(this);
                        this._SoCCCD = value.SoCCCD;
                    }
                    else
                    {
                        this._SoCCCD = default(string);
                    }
                    this.SendPropertyChanged("LyLich");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "HangGPLX_HoSoGPLX", Storage = "_HangGPLX", ThisKey = "MaHang", OtherKey = "MaHang", IsForeignKey = true)]
        public HangGPLX HangGPLX
        {
            get
            {
                return this._HangGPLX.Entity;
            }
            set
            {
                HangGPLX previousValue = this._HangGPLX.Entity;
                if (((previousValue != value)
                            || (this._HangGPLX.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._HangGPLX.Entity = null;
                        previousValue.HoSoGPLXes.Remove(this);
                    }
                    this._HangGPLX.Entity = value;
                    if ((value != null))
                    {
                        value.HoSoGPLXes.Add(this);
                        this._MaHang = value.MaHang;
                    }
                    else
                    {
                        this._MaHang = default(string);
                    }
                    this.SendPropertyChanged("HangGPLX");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.DanToc")]
    public partial class DanToc : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MaDT;

        private string _TenDT;

        private string _TenGoiKhac;

        private EntitySet<LyLich> _LyLiches;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMaDTChanging(int value);
        partial void OnMaDTChanged();
        partial void OnTenDTChanging(string value);
        partial void OnTenDTChanged();
        partial void OnTenGoiKhacChanging(string value);
        partial void OnTenGoiKhacChanged();
        #endregion

        public DanToc()
        {
            this._LyLiches = new EntitySet<LyLich>(new Action<LyLich>(this.attach_LyLiches), new Action<LyLich>(this.detach_LyLiches));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaDT", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int MaDT
        {
            get
            {
                return this._MaDT;
            }
            set
            {
                if ((this._MaDT != value))
                {
                    this.OnMaDTChanging(value);
                    this.SendPropertyChanging();
                    this._MaDT = value;
                    this.SendPropertyChanged("MaDT");
                    this.OnMaDTChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TenDT", DbType = "NVarChar(50)")]
        public string TenDT
        {
            get
            {
                return this._TenDT;
            }
            set
            {
                if ((this._TenDT != value))
                {
                    this.OnTenDTChanging(value);
                    this.SendPropertyChanging();
                    this._TenDT = value;
                    this.SendPropertyChanged("TenDT");
                    this.OnTenDTChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TenGoiKhac", DbType = "NVarChar(300)")]
        public string TenGoiKhac
        {
            get
            {
                return this._TenGoiKhac;
            }
            set
            {
                if ((this._TenGoiKhac != value))
                {
                    this.OnTenGoiKhacChanging(value);
                    this.SendPropertyChanging();
                    this._TenGoiKhac = value;
                    this.SendPropertyChanged("TenGoiKhac");
                    this.OnTenGoiKhacChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "DanToc_LyLich", Storage = "_LyLiches", ThisKey = "MaDT", OtherKey = "MaDT")]
        public EntitySet<LyLich> LyLiches
        {
            get
            {
                return this._LyLiches;
            }
            set
            {
                this._LyLiches.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_LyLiches(LyLich entity)
        {
            this.SendPropertyChanging();
            entity.DanToc = this;
        }

        private void detach_LyLiches(LyLich entity)
        {
            this.SendPropertyChanging();
            entity.DanToc = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.HangGPLX")]
    public partial class HangGPLX : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _MaHang;

        private string _TenHang;

        private string _DoiTuongDuocCap;

        private string _MoTa;

        private string _ThoiHanSuDung;

        private EntitySet<HoSoGPLX> _HoSoGPLXes;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMaHangChanging(string value);
        partial void OnMaHangChanged();
        partial void OnTenHangChanging(string value);
        partial void OnTenHangChanged();
        partial void OnDoiTuongDuocCapChanging(string value);
        partial void OnDoiTuongDuocCapChanged();
        partial void OnMoTaChanging(string value);
        partial void OnMoTaChanged();
        partial void OnThoiHanSuDungChanging(string value);
        partial void OnThoiHanSuDungChanged();
        #endregion

        public HangGPLX()
        {
            this._HoSoGPLXes = new EntitySet<HoSoGPLX>(new Action<HoSoGPLX>(this.attach_HoSoGPLXes), new Action<HoSoGPLX>(this.detach_HoSoGPLXes));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaHang", DbType = "Char(3) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string MaHang
        {
            get
            {
                return this._MaHang;
            }
            set
            {
                if ((this._MaHang != value))
                {
                    this.OnMaHangChanging(value);
                    this.SendPropertyChanging();
                    this._MaHang = value;
                    this.SendPropertyChanged("MaHang");
                    this.OnMaHangChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TenHang", DbType = "NVarChar(100)")]
        public string TenHang
        {
            get
            {
                return this._TenHang;
            }
            set
            {
                if ((this._TenHang != value))
                {
                    this.OnTenHangChanging(value);
                    this.SendPropertyChanging();
                    this._TenHang = value;
                    this.SendPropertyChanged("TenHang");
                    this.OnTenHangChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DoiTuongDuocCap", DbType = "NVarChar(200)")]
        public string DoiTuongDuocCap
        {
            get
            {
                return this._DoiTuongDuocCap;
            }
            set
            {
                if ((this._DoiTuongDuocCap != value))
                {
                    this.OnDoiTuongDuocCapChanging(value);
                    this.SendPropertyChanging();
                    this._DoiTuongDuocCap = value;
                    this.SendPropertyChanged("DoiTuongDuocCap");
                    this.OnDoiTuongDuocCapChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MoTa", DbType = "NVarChar(MAX)")]
        public string MoTa
        {
            get
            {
                return this._MoTa;
            }
            set
            {
                if ((this._MoTa != value))
                {
                    this.OnMoTaChanging(value);
                    this.SendPropertyChanging();
                    this._MoTa = value;
                    this.SendPropertyChanged("MoTa");
                    this.OnMoTaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ThoiHanSuDung", DbType = "NVarChar(100)")]
        public string ThoiHanSuDung
        {
            get
            {
                return this._ThoiHanSuDung;
            }
            set
            {
                if ((this._ThoiHanSuDung != value))
                {
                    this.OnThoiHanSuDungChanging(value);
                    this.SendPropertyChanging();
                    this._ThoiHanSuDung = value;
                    this.SendPropertyChanged("ThoiHanSuDung");
                    this.OnThoiHanSuDungChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "HangGPLX_HoSoGPLX", Storage = "_HoSoGPLXes", ThisKey = "MaHang", OtherKey = "MaHang")]
        public EntitySet<HoSoGPLX> HoSoGPLXes
        {
            get
            {
                return this._HoSoGPLXes;
            }
            set
            {
                this._HoSoGPLXes.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_HoSoGPLXes(HoSoGPLX entity)
        {
            this.SendPropertyChanging();
            entity.HangGPLX = this;
        }

        private void detach_HoSoGPLXes(HoSoGPLX entity)
        {
            this.SendPropertyChanging();
            entity.HangGPLX = null;
        }
    }
}
#pragma warning restore 1591
